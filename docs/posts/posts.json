[
  {
    "path": "posts/2021-08-04-how-to-make-a-website-with-R-studio/",
    "title": "How To Make A Website with R Studio",
    "description": "Are you a user of R Studio? Do you use R Markdown to create your reports? If so, this tutorial is for you! I have created my website with R Studio so that I can easily add my R Markdown reports/blogposts/slides. In this post I describe (1) how to create an empty website with R Studio, (2) how to launch your website with Github Pages, and (3) how to create a profile homepage.",
    "author": [
      {
        "name": "Sally A.M. Hogenboom",
        "url": {}
      }
    ],
    "date": "2022-04-06",
    "categories": [
      "R",
      "R Studio",
      "Distill",
      "Github",
      "Github Pages"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nBackground Knowledge\r\nCreating the Website\r\nCreating a Github Page\r\nAdding a Profile Page\r\n\r\nIntroduction\r\nLike anything, creating a website with R Studio has it’s own pros and\r\ncons. I’ll quickly discuss what they are for me, but keep in mind that\r\nit may be different for you depending on your background knowledge.\r\n🟢 Easy integration with R Markdown  🟢 One place for your public\r\nslides/analyses/scripts/reports  🟢 Version control with Github\r\nPages  🟢 Free hosting with Github Pages  🟢 Automatic linking\r\nand chronologic blogposts  🟠 Customization if fully possible, but\r\nnot intuitive  🔴 Experience with R Studio  🔴 Less intuitive\r\nthan, for example, wordpress environments \r\nI am personally aware of three different packages for creating your\r\nwebsite with R Studio:\r\nR Markdown\r\nwebsites\r\nHugo & Blogdown\r\nDistill\r\nEach of these methods has their own syntax, file structures, and\r\ncustomization options. I first created my website with\r\nHugo/Blogdown, but in the end was unable to easily\r\nkeep it up-to-date. For me the biggest issue was the file structure\r\nwhich I did not find entirely intuitive, especially when updating my\r\nwebsite only once every few months. Distill is much more\r\nintuitive to use, but slightly limited in the types of pages you can\r\ncreate. For now it suffices my needs, and I already found some packages\r\nthat will help me achieve pages similar to Hugo’s widgets.\r\nBackground Knowledge\r\nThis tutorial is suitable for you if you..\r\n… have R and R\r\nStudio installed\r\n… know how to install R packages\r\n… have a Github account\r\n… know how to use your Terminal (Mac) / Command Prompt\r\n(Windows)\r\n… have basic knowledge of Git\r\nI will try and describe the steps as detailed as possible. However, I\r\nwill not include directions such as “upper-right corner” because user\r\ninterfaces are known to change. Instead I expect you to know how to work\r\neach of the elements/programs discussed above.\r\nCreating the Website\r\n\r\nObjective: Creating an empty/shell website\r\n\r\nDistill has excellent documentation\r\navailable. Some of the steps I describe here will also be included in\r\ntheir documentation with more/less detail.\r\nR Studio\r\nInstall the Distill\r\npackage:\r\n\r\n\r\ninstall.packages(\"distill\")\r\n \r\n\r\n\r\nCreate a new R Studio project (New Project... >\r\nNew Directory > Distill Website)\r\n\r\n\r\n\r\nDirectory name: the name of the folder that is\r\nautomatically created for this new project. I named mine ‘Website’.\r\nCreate project as a subdirectory of...: the folder\r\nwhere you want to store your website. I stored mine in the ‘Admin’\r\nfolder.\r\nTitle: the name of your website which is shown in the\r\n‘header’ of your website. This can easily be adjusted later on.\r\nConfigure for Github Pages: please select this option\r\nas it prevents some manual steps later on.\r\nOpen in new session: I chose to start this project with\r\na new/fresh R Studio session, but this is not a mandatory step.\r\nBuild the website:\r\n\r\n\r\nrmarkdown::render_site()\r\n \r\n\r\n\r\n\r\nOutcome: All .Rmd files have now been\r\nconverted to .html files and have been linked together with\r\na menu-bar. Your empty/shell website is available to you locally in the\r\ndocs folder of your project.\r\n\r\nCreating a Github Page\r\n\r\nObjective: Making your website available online.\r\n\r\nIn order to put your website online it must be hosted. I like to\r\nenvision ‘hosting’ as a town (the provider) in an online world. I have\r\nopted to use the provider Github\r\nPages because (1) it is free and (2) it forces me to version control\r\nmy website. Other options are available, which are discussed in more\r\ndetail in this Distill article.\r\nGithub\r\nCreate a new - empty and public - repository.\r\nNote the name must follow this convention for the Github Pages to work\r\n(cf. the Github Pages\r\ndocumentation):\r\nUSERNAME.github.io\r\nTerminal / Command Prompt\r\nOpen a new terminal at the folder where you stored your website\r\nInitialize git for the folder\r\ngit init\r\n\r\nAdd all files currently in the folder\r\ngit add -A\r\n\r\nCommit the files with a commit message\r\n\r\ngit commit -m \"Initialize Website\"\r\n\r\nCreate the main branch\r\ngit branch -M main\r\n\r\nConnect your local folder and the Github Repository\r\ngit remote add origin https://github.com/SHogenboom/shogenboom.github.io.git\r\n\r\nPush the local files to the Github Repository\r\ngit push -u origin main\r\n\r\nGithub\r\nOpen Settings > Pages\r\nChange the source of the page to the sub-folder\r\n/docs. This tells your Github Pages that it should look for\r\nthe index.html file in the docs folder.\r\nTerminal / Command Prompt\r\nThe previous step on Github has made changes to the repository\r\n(CNAME). These need to be pulled to your local instance of\r\nthe repository\r\n\r\ngit pull\r\n\r\nWeb browser\r\nYour website is now online @\r\nhttps://USERNAME.github.io\r\nAdding a Profile Page\r\n\r\nObjective: Converting your homepage to a profile\r\nlanding page\r\n\r\nYou can make your homepage (index.html) anything you\r\nwant. I wanted a sort of landing page with basic information about me.\r\nIn the Distill documentation I learned about the\r\npostcards package which is a very easy way of creating profile\r\npages. Before you continue with the tutorial, take a look at their documentation to\r\nchoose your profile page theme.\r\nLocal\r\nChoose a picture or logo you want to include on your profile\r\npage\r\nSave the image in the website project. I chose to create a new\r\nfolder images with the file avatar.jpg in\r\nit.\r\nR Studio\r\nCreate a new postcard:\r\n\r\n\r\npostcards::create_postcard(file = \"tmp.Rmd\",\r\n                            template = \"jolla\")\r\n \r\n\r\n\r\nCopy the yaml header from tmp.Rmd to\r\nthe index.Rmd file and update with your personal\r\ninformation. My header now looks like this:\r\n\r\ntitle: \"Sally A.M. Hogenboom\"\r\nimage: \"images/avatar.jpg\"\r\nlinks:\r\n  - label: GitHub\r\n    url: \"https://github.com/SHogenboom\"\r\n  - label: Email\r\n    url: \"mailto:sally.hogenboom@gmail.com\"\r\noutput:\r\n  postcards::jolla\r\nsite: distill::distill_website\r\n\r\nYou can now remove the tmp.Rmd file again - we no\r\nlonger need it!\r\nRe-build the website\r\n\r\n\r\nrmarkdown::render_site(encoding = 'UTF-8')\r\n \r\n\r\n\r\nTerminal\r\nAdd all the files/changes\r\ngit add -A\r\n\r\nAdd an informative message for the version control\r\ngit commit -m \"Add profile page\"\r\n\r\nPush the changes so they show up online\r\ngit push\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-04-06T15:13:09+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-08-05-custom-styling-of-a-distill-website/",
    "title": "Custom Styling of a Distill Website",
    "description": "Some Examples of CSS Tweaks I made to the Distill Theme",
    "author": [
      {
        "name": "Sally A.M. Hogenboom",
        "url": {}
      }
    ],
    "date": "2022-04-06",
    "categories": [
      "Distill",
      "CSS"
    ],
    "contents": "\r\nCustom Styling\r\nI really love the Distill framework but have opted to make some\r\ncustom styling changes. The process of adding custom styling (CSS) to\r\nyour website is described in detail in their documentation.\r\nIn my own words the steps were as follows:\r\nR Studio\r\nCreate a new theme:\r\n\r\n\r\ndistill::create_theme()\r\n\r\n\r\n\r\nAdd the custom css file to your website:\r\nOpen _site.yml\r\nChange the output format to (keep the tab indents!):\r\noutput:\r\n  distill::distill_article:\r\n    theme: theme.css\r\nUpdate the theme.css file as desired (see example\r\nchanges below)\r\nAdjustments\r\nIf you also want to make the adjustments shown below, add the\r\ndisplayed CSS code to the theme.css file.\r\n\r\n\r\n\r\nReduce the spacing\r\nbetween bullet-points\r\n\r\nBefore\r\n\r\n\r\n\r\nAfter\r\n\r\n\r\n\r\nCSS\r\n\r\n/* Decrease spacing between elements of bullet lists */\r\n/* 0.1em creates a small space between lines of text dependent on the font-size*/\r\nd-article li, d-article ul, di-article ol {\r\n  margin-bottom: 0.1em;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-08-05-custom-styling-of-a-distill-website/images/bullet_old.png",
    "last_modified": "2022-04-06T15:14:05+02:00",
    "input_file": {}
  }
]
